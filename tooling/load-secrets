#!/bin/bash

set -euo pipefail

## File format:
# ---
# namespace:
#   app:
#     secret1: value1
#     secret2: value2
secrets_file_path="${1}"

if [ ! -f "${secrets_file_path}" ]; then
  echo "YAML file not found: ${secrets_file_path}"
  exit 1
fi

if ! command -v yq &> /dev/null; then
  echo "yq is required but not found"
  exit 1
fi

namespaces="$(yq -r 'keys[]' ${secrets_file_path})"

for namespace in ${namespaces}; do
    if [[ "${namespace}" == "infra" ]]; then
        secrets="$(yq -r ".${namespace}" "${secrets_file_path}" | yq -r 'to_entries[] | "\(.key)=\(.value)"')"
        secrets="$(echo ${secrets} | tr '\n' ' ')"
        echo "Storing secrets: ${secrets}"
        kubectl -n vault exec -it vault-0 -- vault kv put secret/"${namespace}" ${secrets}
    else
        apps="$(yq -r ".${namespace} | keys[]" "${secrets_file_path}")"
        for app in ${apps}; do
            secrets="$(yq -r ".${namespace}.${app}" "${secrets_file_path}" | yq -r 'to_entries[] | "\(.key)=\(.value)"')"
            secrets="$(echo ${secrets} | tr '\n' ' ')"
            echo "Storing secrets: ${secrets}"
            kubectl -n vault exec -it vault-0 -- vault kv put secret/"${namespace}"/"${app}" ${secrets}
        done
    fi
done
